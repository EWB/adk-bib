diff --git a/apachesolr-search-view-modes-search-result.tpl.php b/apachesolr-search-view-modes-search-result.tpl.php
index e69de29..8e22676 100644
--- a/apachesolr-search-view-modes-search-result.tpl.php
+++ b/apachesolr-search-view-modes-search-result.tpl.php
@@ -0,0 +1,9 @@
+<?php if ($search_results): ?>
+  <ol class="search-results <?php print $module; ?>-results">
+    <?php print $search_results; ?>
+  </ol>
+  <?php print $pager; ?>
+<?php else: ?>
+  <h2><?php print t('Your search yielded no results');?></h2>
+  <?php print search_help('search#noresults', drupal_help_arg()); ?>
+<?php endif; ?>
diff --git a/apachesolr_search_view_modes.info b/apachesolr_search_view_modes.info
index 9377b29..69c1203 100644
--- a/apachesolr_search_view_modes.info
+++ b/apachesolr_search_view_modes.info
@@ -1,4 +1,5 @@
 name = Apache Solr View Modes
-description = Extends Apache Solr module by adding view mode support for search results
+description = Extends Apache Solr module by adding view mode support for search results.
 core = 7.x
+package = Apache Solr
 dependencies[] = apachesolr
diff --git a/apachesolr_search_view_modes.module b/apachesolr_search_view_modes.module
index 9cd6747..c25e3ae 100644
--- a/apachesolr_search_view_modes.module
+++ b/apachesolr_search_view_modes.module
@@ -1,111 +1,113 @@
 <?php
 
 /**
- * Implementation of hook_form_alter()
+ * Implements hook_form_FORM_ID_alter().
  */
-function apachesolr_search_view_modes_form_alter(&$form, &$form_state, $form_id){
-  
-  /**
-   * Override the Apache Solr Search Page configuration form
-   */
-  if ($form_id == 'apachesolr_search_page_settings_form'){
-    
-    $view_modes = array('' => 'Use default core search result');
-    
-    $entity_info = entity_get_info('node'); 
-    
-    /**
-     * Build the view modes dropdown list 
-     */
-    foreach ($entity_info['view modes'] as $machine_name => $view_mode){
-      $view_modes[$machine_name] = $view_mode['label'];
-    }
-    
-    /**
-     * Override form to add custom view modes dropdown 
-     */
-    if ($view_modes){
+function apachesolr_search_view_modes_form_apachesolr_search_page_settings_form_alter(&$form, &$form_state, $form_id) {
+  $view_modes = array();
+  $view_modes[] = 'Use default core search result';
 
-      //Grab search page id
-      $search_page_id = $form['search_page']['#value']['page_id'];
+  // Build the view modes dropdown list.
+  $entity_info = entity_get_info('node'); 
+  foreach ($entity_info['view modes'] as $machine_name => $view_mode) {
+    $view_modes[$machine_name] = $view_mode['label'];
+   }
 
-      /**
-       * Fetch currently save Solr view modes 
-       */
-      $solr_view_modes =  variable_get('apachesolr_search_view_modes', '');
-      
-      $form['info']['page_title']['#weight'] = -2;
-      
-      $form['info']['apachesolr_search_view_mode'] = array(
-        '#type' => 'select',
-        '#title' => t('View Mode'),
-        '#description' => t('Select another view mode in favor of the default search view mode.'),
-        '#options' => $view_modes,
-        '#weight' => -1,
-        '#default_value' => isset($solr_view_modes[$search_page_id]) ? $solr_view_modes[$search_page_id] : '',
-      );
-      
-      //Add custom submit handler
-      $form['#submit'][] = 'apachesolr_search_view_modes_save_view_mode';
-    }
-  }
+  // Grab the search page id.
+  $search_page_id = $form['search_page']['#value']['page_id'];
+
+  // Fetch currently save Solr view modes.
+  $solr_view_modes =  variable_get('apachesolr_search_view_modes', FALSE);
+
+  $form['info']['page_title']['#weight'] = -2;
+  $form['info']['apachesolr_search_view_mode'] = array(
+    '#type' => 'select',
+    '#title' => t('View Mode'),
+    '#description' => t('Select another view mode in favor of the default search view mode.'),
+    '#options' => $view_modes,
+    '#weight' => -1,
+    '#default_value' => isset($solr_view_modes[$search_page_id]) ? $solr_view_modes[$search_page_id] : FALSE,
+  );
+
+  // Add custom submit handler.
+  $form['#submit'][] = 'apachesolr_search_view_modes_save_view_mode';
 }
 
 /**
- * Apache Solr Save View Mode Form Submit Handler 
+ * Implementation of apachesolr_search_view_modes_save_view_mode().
+ *
+ * Apachesolr submit handler.
  */
-function apachesolr_search_view_modes_save_view_mode($form, &$form_state){
-
-  //Get Solr View Modes
-  $solr_view_modes =  variable_get('apachesolr_search_view_modes', '');
-  
+function apachesolr_search_view_modes_save_view_mode($form, &$form_state) {
   $values = $form_state['values'];
   
-  //Set View Modes
-  $solr_view_modes[$values['page_id']] = $values['apachesolr_search_view_mode'];
-  
-  //Save Apache Solr View Modes
+  // Get previously saved view modes.
+  $solr_view_modes =  variable_get('apachesolr_search_view_modes', FALSE);
+
+  // Set the new values.
+  if(isset($values['apachesolr_search_view_mode']) && $values['apachesolr_search_view_mode'] != '0') {
+    $solr_view_modes[$values['page_id']] = $values['apachesolr_search_view_mode'];
+  }
+  else {
+    unset($solr_view_modes[$values['page_id']]);
+  }
   variable_set('apachesolr_search_view_modes', $solr_view_modes);
 }
 
 /**
- * Implementation of hook_preprocess_search_results()
+ * Implements hook_apachesolr_search_page_alter().
  */
-function apachesolr_search_view_modes_preprocess_search_results(&$variables) {
-  
-  /**
-   * This will override node results if a node view mode way selected on the apachesolr page    
-   * configuration page.
-   */
-  $solr_view_modes =  variable_get('apachesolr_search_view_modes', '');
-  
-  /**
-   * Check to see if the search results page we are on has a view mode selected .
-   */
-  if (isset($variables['search_page']['page_id']) AND isset($solr_view_modes[$variables['search_page']['page_id']])){
-    
-    $view_mode = $solr_view_modes[$variables['search_page']['page_id']];
-    
-    /**
-     * Iterate through results and load the node view mode instead of the default search result
-     * snippet. 
-     */
-    if ($view_mode){
-      //Reset Search Results, we are going to completely override
-      $variables['search_results'] = '';
-      
-      foreach ($variables['results'] as $result) {
-        if ($result['entity_type'] == 'node'){      
-          $node = node_load($result['node']->entity_id);
-          
-          if (is_object($node)){
-            $build = node_view($node, $view_mode);
-            $build['links']['#access'] = FALSE;//hide links
-
-            $variables['search_results'] .= render($build);
-          }
-        }
-      }
-    }
+function apachesolr_search_view_modes_apachesolr_search_page_alter(array &$build, array $search_page) {
+  // Override search_result theme function, if a difftrent view_mode is selected.
+  $solr_view_modes = variable_get('apachesolr_search_view_modes', '');
+  if (isset($search_page['page_id']) && isset($solr_view_modes[$search_page['page_id']])) {
+    $build['search_results']['#theme'] = 'apachesolr_search_view_modes_search_result';
   }
-}
\ No newline at end of file
+}
+
+/**
+ * Implements hook_theme().
+ */
+function apachesolr_search_view_modes_theme($variables) {
+  return array(
+    'apachesolr_search_view_modes_search_result' => array(
+      'variables' => array(
+        'results' => NULL,
+        'module' => NULL,
+        'search_page' => NULL,
+        'search_results' => NULL,
+      ),
+      'template' => 'apachesolr-search-view-modes-search-result',
+    ),
+  );
+}
+
+/**
+ * Implementation of template_preprocess_apachesolr_search_view_modes_search_result().
+ */
+function template_preprocess_apachesolr_search_view_modes_search_result(&$variables) {
+  if (!empty($variables['results'])) {
+    $solr_view_modes = variable_get('apachesolr_search_view_modes', '');
+     $view_mode = $solr_view_modes[$variables['search_page']['page_id']];
+    // Iterate through results and load the node view mode.
+    $variables['search_results'] = '';
+    foreach ($variables['results'] as $result) {
+      $entity_type = $result['entity_type'];
+      // A User result does not contain the user object, so we need to get
+      // the entity id from fields array.
+      $entity_id = ($entity_type == 'user') ? $result['fields']['entity_id'] : $result[$entity_type]->entity_id;
+      $entity = entity_load($entity_type, array($entity_id));
+
+      if (is_object(reset($entity))) {
+        $build = entity_view($entity_type, $entity, $view_mode);
+        // Hide links.
+        $build['links']['#access'] = FALSE;
+
+        $variables['search_results'] .= render($build);
+       }
+     }
+   }
+
+  $variables['pager'] = theme('pager', array('tags' => NULL));
+  $variables['theme_hook_suggestions'][] = 'search_results__' . $variables['module'];
+}
